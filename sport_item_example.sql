-- 具体比赛项目示例数据
-- 演示如何基于基础项目创建具体的比赛项目（包含性别、年龄组、距离区分）
-- 作者：NiuCloud Team
-- 日期：2024-03-21

-- 注意：这个脚本仅作为示例，实际使用时需要根据具体赛事ID和基础项目ID动态创建
-- 假设赛事ID为1，基础项目已创建完成

-- ============================================
-- 游泳项目具体比赛项目示例
-- ============================================

-- 基于自由泳基础项目(假设base_item_id=1)创建不同距离和性别的具体比赛项目
INSERT INTO `sport_item` (`event_id`, `base_item_id`, `category_id`, `name`, `competition_type`, `gender_type`, `age_group`, `max_participants`, `min_participants`, `registration_fee`, `rules`, `equipment`, `venue_requirements`, `sort`, `status`, `create_time`, `update_time`) VALUES

-- 自由泳项目 - 50米
(1, 1, 3, '男子50米自由泳', 1, 1, '不限', 8, 1, 30.00, '国际泳联标准规则，50米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 1, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 1, 3, '女子50米自由泳', 1, 2, '不限', 8, 1, 30.00, '国际泳联标准规则，50米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 2, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 自由泳项目 - 100米
(1, 1, 3, '男子100米自由泳', 1, 1, '不限', 8, 1, 40.00, '国际泳联标准规则，100米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 3, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 1, 3, '女子100米自由泳', 1, 2, '不限', 8, 1, 40.00, '国际泳联标准规则，100米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 4, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 自由泳项目 - 200米
(1, 1, 3, '男子200米自由泳', 1, 1, '不限', 8, 1, 50.00, '国际泳联标准规则，200米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 5, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 1, 3, '女子200米自由泳', 1, 2, '不限', 8, 1, 50.00, '国际泳联标准规则，200米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 6, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 自由泳项目 - 400米
(1, 1, 3, '男子400米自由泳', 1, 1, '不限', 8, 1, 60.00, '国际泳联标准规则，400米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 7, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 1, 3, '女子400米自由泳', 1, 2, '不限', 8, 1, 60.00, '国际泳联标准规则，400米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 8, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 自由泳项目 - 800米 (主要是女子项目)
(1, 1, 3, '女子800米自由泳', 1, 2, '不限', 8, 1, 70.00, '国际泳联标准规则，800米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 9, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 自由泳项目 - 1500米 (主要是男子项目)
(1, 1, 3, '男子1500米自由泳', 1, 1, '不限', 8, 1, 80.00, '国际泳联标准规则，1500米距离', '泳衣、泳帽、泳镜', '50米标准游泳池', 10, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于蛙泳基础项目(假设base_item_id=3)创建具体比赛项目
-- 蛙泳项目 - 50米
(1, 3, 3, '男子50米蛙泳', 1, 1, '不限', 8, 1, 35.00, '国际泳联标准规则，50米蛙泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 15, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 3, 3, '女子50米蛙泳', 1, 2, '不限', 8, 1, 35.00, '国际泳联标准规则，50米蛙泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 16, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 蛙泳项目 - 100米
(1, 3, 3, '男子100米蛙泳', 1, 1, '不限', 8, 1, 45.00, '国际泳联标准规则，100米蛙泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 17, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 3, 3, '女子100米蛙泳', 1, 2, '不限', 8, 1, 45.00, '国际泳联标准规则，100米蛙泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 18, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 蛙泳项目 - 200米
(1, 3, 3, '男子200米蛙泳', 1, 1, '不限', 8, 1, 55.00, '国际泳联标准规则，200米蛙泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 19, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 3, 3, '女子200米蛙泳', 1, 2, '不限', 8, 1, 55.00, '国际泳联标准规则，200米蛙泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 20, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于自由泳接力基础项目(假设base_item_id=6)创建团体比赛项目
-- 自由泳接力项目
(1, 6, 3, '男子4×50米自由泳接力', 2, 1, '不限', 5, 4, 120.00, '国际泳联标准规则，4人团队，每队可报1名替补', '泳衣、泳帽、泳镜', '50米标准游泳池', 50, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 6, 3, '女子4×50米自由泳接力', 2, 2, '不限', 5, 4, 120.00, '国际泳联标准规则，4人团队，每队可报1名替补', '泳衣、泳帽、泳镜', '50米标准游泳池', 51, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 6, 3, '混合4×50米自由泳接力', 2, 3, '不限', 5, 4, 120.00, '国际泳联标准规则，男女各2人', '泳衣、泳帽、泳镜', '50米标准游泳池', 52, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

(1, 6, 3, '男子4×100米自由泳接力', 2, 1, '不限', 5, 4, 160.00, '国际泳联标准规则，4人团队，每队可报1名替补', '泳衣、泳帽、泳镜', '50米标准游泳池', 53, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 6, 3, '女子4×100米自由泳接力', 2, 2, '不限', 5, 4, 160.00, '国际泳联标准规则，4人团队，每队可报1名替补', '泳衣、泳帽、泳镜', '50米标准游泳池', 54, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于仰泳基础项目(假设base_item_id=2)创建具体比赛项目
-- 仰泳项目 - 50米
(1, 2, 3, '男子50米仰泳', 1, 1, '不限', 8, 1, 35.00, '国际泳联标准规则，50米仰泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 60, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 2, 3, '女子50米仰泳', 1, 2, '不限', 8, 1, 35.00, '国际泳联标准规则，50米仰泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 61, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 仰泳项目 - 100米
(1, 2, 3, '男子100米仰泳', 1, 1, '不限', 8, 1, 45.00, '国际泳联标准规则，100米仰泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 62, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 2, 3, '女子100米仰泳', 1, 2, '不限', 8, 1, 45.00, '国际泳联标准规则，100米仰泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 63, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 仰泳项目 - 200米
(1, 2, 3, '男子200米仰泳', 1, 1, '不限', 8, 1, 55.00, '国际泳联标准规则，200米仰泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 64, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 2, 3, '女子200米仰泳', 1, 2, '不限', 8, 1, 55.00, '国际泳联标准规则，200米仰泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 65, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于蝶泳基础项目(假设base_item_id=4)创建具体比赛项目
-- 蝶泳项目 - 50米
(1, 4, 3, '男子50米蝶泳', 1, 1, '不限', 8, 1, 40.00, '国际泳联标准规则，50米蝶泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 70, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 4, 3, '女子50米蝶泳', 1, 2, '不限', 8, 1, 40.00, '国际泳联标准规则，50米蝶泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 71, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 蝶泳项目 - 100米
(1, 4, 3, '男子100米蝶泳', 1, 1, '不限', 8, 1, 50.00, '国际泳联标准规则，100米蝶泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 72, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 4, 3, '女子100米蝶泳', 1, 2, '不限', 8, 1, 50.00, '国际泳联标准规则，100米蝶泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 73, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 蝶泳项目 - 200米
(1, 4, 3, '男子200米蝶泳', 1, 1, '不限', 8, 1, 60.00, '国际泳联标准规则，200米蝶泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 74, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 4, 3, '女子200米蝶泳', 1, 2, '不限', 8, 1, 60.00, '国际泳联标准规则，200米蝶泳', '泳衣、泳帽、泳镜', '50米标准游泳池', 75, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于个人混合泳基础项目(假设base_item_id=5)创建具体比赛项目
-- 个人混合泳项目 - 200米
(1, 5, 3, '男子200米个人混合泳', 1, 1, '不限', 8, 1, 70.00, '国际泳联标准规则，按蝶泳-仰泳-蛙泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 80, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 5, 3, '女子200米个人混合泳', 1, 2, '不限', 8, 1, 70.00, '国际泳联标准规则，按蝶泳-仰泳-蛙泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 81, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 个人混合泳项目 - 400米
(1, 5, 3, '男子400米个人混合泳', 1, 1, '不限', 8, 1, 90.00, '国际泳联标准规则，按蝶泳-仰泳-蛙泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 82, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 5, 3, '女子400米个人混合泳', 1, 2, '不限', 8, 1, 90.00, '国际泳联标准规则，按蝶泳-仰泳-蛙泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 83, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于混合泳接力基础项目(假设base_item_id=7)创建团体比赛项目
-- 混合泳接力项目
(1, 7, 3, '男子4×100米混合泳接力', 2, 1, '不限', 5, 4, 180.00, '国际泳联标准规则，按仰泳-蛙泳-蝶泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 85, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 7, 3, '女子4×100米混合泳接力', 2, 2, '不限', 5, 4, 180.00, '国际泳联标准规则，按仰泳-蛙泳-蝶泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 86, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 7, 3, '混合4×100米混合泳接力', 2, 3, '不限', 5, 4, 180.00, '国际泳联标准规则，男女各2人，按仰泳-蛙泳-蝶泳-自由泳顺序', '泳衣、泳帽、泳镜', '50米标准游泳池', 87, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于跳水基础项目(假设base_item_id=8)创建具体比赛项目
-- 跳水项目
(1, 8, 3, '男子1米跳板跳水', 1, 1, '不限', 12, 1, 80.00, '国际泳联跳水规则，1米跳板', '泳衣', '1米跳板池', 90, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 8, 3, '女子1米跳板跳水', 1, 2, '不限', 12, 1, 80.00, '国际泳联跳水规则，1米跳板', '泳衣', '1米跳板池', 91, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 8, 3, '男子3米跳板跳水', 1, 1, '不限', 12, 1, 100.00, '国际泳联跳水规则，3米跳板', '泳衣', '3米跳板池', 92, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 8, 3, '女子3米跳板跳水', 1, 2, '不限', 12, 1, 100.00, '国际泳联跳水规则，3米跳板', '泳衣', '3米跳板池', 93, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 8, 3, '男子10米跳台跳水', 1, 1, '不限', 12, 1, 120.00, '国际泳联跳水规则，10米跳台', '泳衣', '10米跳台池', 94, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 8, 3, '女子10米跳台跳水', 1, 2, '不限', 12, 1, 120.00, '国际泳联跳水规则，10米跳台', '泳衣', '10米跳台池', 95, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- ============================================
-- 田径项目具体比赛项目示例
-- ============================================

-- 基于短跑基础项目(假设base_item_id=20)创建具体比赛项目
-- 短跑项目 - 100米
(1, 20, 1, '男子100米跑', 1, 1, '不限', 8, 1, 25.00, '国际田联标准规则，100米跑', '跑鞋、运动服', '400米标准田径场', 100, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 20, 1, '女子100米跑', 1, 2, '不限', 8, 1, 25.00, '国际田联标准规则，100米跑', '跑鞋、运动服', '400米标准田径场', 101, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 短跑项目 - 200米
(1, 20, 1, '男子200米跑', 1, 1, '不限', 8, 1, 30.00, '国际田联标准规则，200米跑', '跑鞋、运动服', '400米标准田径场', 102, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 20, 1, '女子200米跑', 1, 2, '不限', 8, 1, 30.00, '国际田联标准规则，200米跑', '跑鞋、运动服', '400米标准田径场', 103, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 短跑项目 - 400米
(1, 20, 1, '男子400米跑', 1, 1, '不限', 8, 1, 35.00, '国际田联标准规则，400米跑', '跑鞋、运动服', '400米标准田径场', 104, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 20, 1, '女子400米跑', 1, 2, '不限', 8, 1, 35.00, '国际田联标准规则，400米跑', '跑鞋、运动服', '400米标准田径场', 105, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于跳远基础项目(假设base_item_id=27)创建具体比赛项目
(1, 27, 1, '男子跳远', 1, 1, '不限', 12, 1, 40.00, '国际田联标准规则，跳远', '跑鞋、运动服', '跳远场地', 120, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 27, 1, '女子跳远', 1, 2, '不限', 12, 1, 40.00, '国际田联标准规则，跳远', '跑鞋、运动服', '跳远场地', 121, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于接力基础项目(假设base_item_id=37)创建团体比赛项目
(1, 37, 1, '男子4×100米接力', 2, 1, '不限', 5, 4, 100.00, '国际田联标准规则，4人团队，每队可报1名替补', '接力棒、跑鞋、运动服', '400米标准田径场', 150, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 37, 1, '女子4×100米接力', 2, 2, '不限', 5, 4, 100.00, '国际田联标准规则，4人团队，每队可报1名替补', '接力棒、跑鞋、运动服', '400米标准田径场', 151, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 37, 1, '混合4×100米接力', 2, 3, '不限', 5, 4, 100.00, '国际田联标准规则，男女各2人', '接力棒、跑鞋、运动服', '400米标准田径场', 152, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

(1, 37, 1, '男子4×400米接力', 2, 1, '不限', 5, 4, 140.00, '国际田联标准规则，4人团队，每队可报1名替补', '接力棒、跑鞋、运动服', '400米标准田径场', 153, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 37, 1, '女子4×400米接力', 2, 2, '不限', 5, 4, 140.00, '国际田联标准规则，4人团队，每队可报1名替补', '接力棒、跑鞋、运动服', '400米标准田径场', 154, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于中长跑基础项目(假设base_item_id=21)创建具体比赛项目
-- 中长跑项目 - 800米
(1, 21, 1, '男子800米跑', 1, 1, '不限', 8, 1, 40.00, '国际田联标准规则，800米跑', '跑鞋、运动服', '400米标准田径场', 160, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 21, 1, '女子800米跑', 1, 2, '不限', 8, 1, 40.00, '国际田联标准规则，800米跑', '跑鞋、运动服', '400米标准田径场', 161, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 中长跑项目 - 1500米
(1, 21, 1, '男子1500米跑', 1, 1, '不限', 12, 1, 45.00, '国际田联标准规则，1500米跑', '跑鞋、运动服', '400米标准田径场', 162, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 21, 1, '女子1500米跑', 1, 2, '不限', 12, 1, 45.00, '国际田联标准规则，1500米跑', '跑鞋、运动服', '400米标准田径场', 163, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于长跑基础项目(假设base_item_id=22)创建具体比赛项目
-- 长跑项目 - 3000米
(1, 22, 1, '男子3000米跑', 1, 1, '不限', 15, 1, 50.00, '国际田联标准规则，3000米跑', '跑鞋、运动服', '400米标准田径场', 165, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 22, 1, '女子3000米跑', 1, 2, '不限', 15, 1, 50.00, '国际田联标准规则，3000米跑', '跑鞋、运动服', '400米标准田径场', 166, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 长跑项目 - 5000米
(1, 22, 1, '男子5000米跑', 1, 1, '不限', 20, 1, 60.00, '国际田联标准规则，5000米跑', '跑鞋、运动服', '400米标准田径场', 167, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 22, 1, '女子5000米跑', 1, 2, '不限', 20, 1, 60.00, '国际田联标准规则，5000米跑', '跑鞋、运动服', '400米标准田径场', 168, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 长跑项目 - 10000米
(1, 22, 1, '男子10000米跑', 1, 1, '不限', 30, 1, 80.00, '国际田联标准规则，10000米跑', '跑鞋、运动服', '400米标准田径场', 169, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 22, 1, '女子10000米跑', 1, 2, '不限', 30, 1, 80.00, '国际田联标准规则，10000米跑', '跑鞋、运动服', '400米标准田径场', 170, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于马拉松基础项目(假设base_item_id=23)创建具体比赛项目
(1, 23, 1, '男子马拉松', 1, 1, '不限', 100, 1, 100.00, '国际田联标准规则，42.195公里', '跑鞋、运动服', '马拉松赛道', 175, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 23, 1, '女子马拉松', 1, 2, '不限', 100, 1, 100.00, '国际田联标准规则，42.195公里', '跑鞋、运动服', '马拉松赛道', 176, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于跨栏基础项目(假设base_item_id=24)创建具体比赛项目
-- 跨栏项目 - 110米/100米
(1, 24, 1, '男子110米栏', 1, 1, '不限', 8, 1, 50.00, '国际田联标准规则，110米栏', '跑鞋、运动服', '400米标准田径场', 180, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 24, 1, '女子100米栏', 1, 2, '不限', 8, 1, 50.00, '国际田联标准规则，100米栏', '跑鞋、运动服', '400米标准田径场', 181, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 跨栏项目 - 400米
(1, 24, 1, '男子400米栏', 1, 1, '不限', 8, 1, 60.00, '国际田联标准规则，400米栏', '跑鞋、运动服', '400米标准田径场', 182, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 24, 1, '女子400米栏', 1, 2, '不限', 8, 1, 60.00, '国际田联标准规则，400米栏', '跑鞋、运动服', '400米标准田径场', 183, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于竞走基础项目(假设base_item_id=26)创建具体比赛项目
(1, 26, 1, '男子20公里竞走', 1, 1, '不限', 50, 1, 80.00, '国际田联竞走规则，20公里', '跑鞋、运动服', '竞走赛道', 190, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 26, 1, '女子20公里竞走', 1, 2, '不限', 50, 1, 80.00, '国际田联竞走规则，20公里', '跑鞋、运动服', '竞走赛道', 191, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于三级跳远基础项目(假设base_item_id=28)创建具体比赛项目
(1, 28, 1, '男子三级跳远', 1, 1, '不限', 12, 1, 50.00, '国际田联标准规则，三级跳远', '跑鞋、运动服', '三级跳远场地', 195, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 28, 1, '女子三级跳远', 1, 2, '不限', 12, 1, 50.00, '国际田联标准规则，三级跳远', '跑鞋、运动服', '三级跳远场地', 196, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于跳高基础项目(假设base_item_id=29)创建具体比赛项目
(1, 29, 1, '男子跳高', 1, 1, '不限', 15, 1, 60.00, '国际田联标准规则，跳高', '跑鞋、运动服', '跳高场地', 200, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 29, 1, '女子跳高', 1, 2, '不限', 15, 1, 60.00, '国际田联标准规则，跳高', '跑鞋、运动服', '跳高场地', 201, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于撑杆跳高基础项目(假设base_item_id=30)创建具体比赛项目
(1, 30, 1, '男子撑杆跳高', 1, 1, '不限', 12, 1, 80.00, '国际田联标准规则，撑杆跳高', '撑杆、跑鞋、运动服', '撑杆跳高场地', 205, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 30, 1, '女子撑杆跳高', 1, 2, '不限', 12, 1, 80.00, '国际田联标准规则，撑杆跳高', '撑杆、跑鞋、运动服', '撑杆跳高场地', 206, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于铅球基础项目(假设base_item_id=31)创建具体比赛项目
(1, 31, 1, '男子铅球', 1, 1, '不限', 12, 1, 50.00, '国际田联标准规则，7.26公斤铅球', '铅球、运动服', '铅球场地', 210, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 31, 1, '女子铅球', 1, 2, '不限', 12, 1, 50.00, '国际田联标准规则，4公斤铅球', '铅球、运动服', '铅球场地', 211, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于铁饼基础项目(假设base_item_id=32)创建具体比赛项目
(1, 32, 1, '男子铁饼', 1, 1, '不限', 12, 1, 60.00, '国际田联标准规则，2公斤铁饼', '铁饼、运动服', '铁饼场地', 215, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 32, 1, '女子铁饼', 1, 2, '不限', 12, 1, 60.00, '国际田联标准规则，1公斤铁饼', '铁饼、运动服', '铁饼场地', 216, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于标枪基础项目(假设base_item_id=33)创建具体比赛项目
(1, 33, 1, '男子标枪', 1, 1, '不限', 12, 1, 70.00, '国际田联标准规则，800克标枪', '标枪、运动服', '标枪场地', 220, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 33, 1, '女子标枪', 1, 2, '不限', 12, 1, 70.00, '国际田联标准规则，600克标枪', '标枪、运动服', '标枪场地', 221, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于链球基础项目(假设base_item_id=34)创建具体比赛项目
(1, 34, 1, '男子链球', 1, 1, '不限', 12, 1, 80.00, '国际田联标准规则，7.26公斤链球', '链球、运动服', '链球场地', 225, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 34, 1, '女子链球', 1, 2, '不限', 12, 1, 80.00, '国际田联标准规则，4公斤链球', '链球、运动服', '链球场地', 226, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于十项全能基础项目(假设base_item_id=35)创建具体比赛项目
(1, 35, 1, '男子十项全能', 1, 1, '不限', 20, 1, 200.00, '国际田联标准规则，十个项目两天完成', '全套田径器材', '综合田径场', 230, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于七项全能基础项目(假设base_item_id=36)创建具体比赛项目
(1, 36, 1, '女子七项全能', 1, 2, '不限', 20, 1, 180.00, '国际田联标准规则，七个项目两天完成', '全套田径器材', '综合田径场', 235, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- ============================================
-- 球类项目具体比赛项目示例
-- ============================================

-- 基于篮球基础项目(假设base_item_id=51)创建具体比赛项目
(1, 51, 2, '男子5人制篮球', 2, 1, '不限', 12, 5, 300.00, 'FIBA标准规则，每队可报7名替补', '篮球、篮筐、球服', '标准篮球场', 200, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 51, 2, '女子5人制篮球', 2, 2, '不限', 12, 5, 300.00, 'FIBA标准规则，每队可报7名替补', '篮球、篮筐、球服', '标准篮球场', 201, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

(1, 51, 2, '男子3人制篮球', 2, 1, '不限', 4, 3, 150.00, '3×3篮球规则，每队可报1名替补', '篮球、篮筐、球服', '半场篮球场', 202, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 51, 2, '女子3人制篮球', 2, 2, '不限', 4, 3, 150.00, '3×3篮球规则，每队可报1名替补', '篮球、篮筐、球服', '半场篮球场', 203, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于乒乓球基础项目(假设base_item_id=53)创建具体比赛项目
(1, 53, 2, '男子乒乓球单打', 1, 1, '不限', 16, 1, 50.00, 'ITTF标准规则，单打比赛', '乒乓球、球拍、球桌', '标准乒乓球场', 220, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 53, 2, '女子乒乓球单打', 1, 2, '不限', 16, 1, 50.00, 'ITTF标准规则，单打比赛', '乒乓球、球拍、球桌', '标准乒乓球场', 221, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

(1, 53, 2, '男子乒乓球双打', 2, 1, '不限', 8, 2, 80.00, 'ITTF标准规则，双打比赛', '乒乓球、球拍、球桌', '标准乒乓球场', 222, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 53, 2, '女子乒乓球双打', 2, 2, '不限', 8, 2, 80.00, 'ITTF标准规则，双打比赛', '乒乓球、球拍、球桌', '标准乒乓球场', 223, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 53, 2, '混合乒乓球双打', 2, 3, '不限', 8, 2, 80.00, 'ITTF标准规则，混合双打比赛', '乒乓球、球拍、球桌', '标准乒乓球场', 224, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于足球基础项目(假设base_item_id=50)创建具体比赛项目
(1, 50, 2, '男子11人制足球', 2, 1, '不限', 18, 11, 500.00, 'FIFA标准规则，每队可报7名替补', '足球、球门、球服', '标准足球场', 250, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 50, 2, '女子11人制足球', 2, 2, '不限', 18, 11, 500.00, 'FIFA标准规则，每队可报7名替补', '足球、球门、球服', '标准足球场', 251, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 50, 2, '男子7人制足球', 2, 1, '不限', 10, 7, 350.00, '7人制足球规则，每队可报3名替补', '足球、球门、球服', '7人制足球场', 252, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 50, 2, '女子7人制足球', 2, 2, '不限', 10, 7, 350.00, '7人制足球规则，每队可报3名替补', '足球、球门、球服', '7人制足球场', 253, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 50, 2, '男子5人制足球', 2, 1, '不限', 7, 5, 250.00, '5人制足球规则，每队可报2名替补', '足球、球门、球服', '5人制足球场', 254, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 50, 2, '女子5人制足球', 2, 2, '不限', 7, 5, 250.00, '5人制足球规则，每队可报2名替补', '足球、球门、球服', '5人制足球场', 255, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于排球基础项目(假设base_item_id=52)创建具体比赛项目
(1, 52, 2, '男子6人制排球', 2, 1, '不限', 12, 6, 360.00, 'FIVB标准规则，每队可报6名替补', '排球、球网', '标准排球场', 260, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 52, 2, '女子6人制排球', 2, 2, '不限', 12, 6, 360.00, 'FIVB标准规则，每队可报6名替补', '排球、球网', '标准排球场', 261, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 52, 2, '男子沙滩排球', 2, 1, '不限', 2, 2, 120.00, '沙滩排球规则，2人制', '排球、球网', '沙滩排球场', 262, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 52, 2, '女子沙滩排球', 2, 2, '不限', 2, 2, 120.00, '沙滩排球规则，2人制', '排球、球网', '沙滩排球场', 263, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 52, 2, '混合沙滩排球', 2, 3, '不限', 2, 2, 120.00, '沙滩排球规则，男女各1人', '排球、球网', '沙滩排球场', 264, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于羽毛球基础项目(假设base_item_id=54)创建具体比赛项目
(1, 54, 2, '男子羽毛球单打', 1, 1, '不限', 16, 1, 60.00, 'BWF标准规则，单打比赛', '羽毛球、球拍', '标准羽毛球场', 270, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 54, 2, '女子羽毛球单打', 1, 2, '不限', 16, 1, 60.00, 'BWF标准规则，单打比赛', '羽毛球、球拍', '标准羽毛球场', 271, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 54, 2, '男子羽毛球双打', 2, 1, '不限', 8, 2, 100.00, 'BWF标准规则，双打比赛', '羽毛球、球拍', '标准羽毛球场', 272, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 54, 2, '女子羽毛球双打', 2, 2, '不限', 8, 2, 100.00, 'BWF标准规则，双打比赛', '羽毛球、球拍', '标准羽毛球场', 273, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 54, 2, '混合羽毛球双打', 2, 3, '不限', 8, 2, 100.00, 'BWF标准规则，混合双打比赛', '羽毛球、球拍', '标准羽毛球场', 274, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于网球基础项目(假设base_item_id=55)创建具体比赛项目
(1, 55, 2, '男子网球单打', 1, 1, '不限', 16, 1, 80.00, 'ITF标准规则，单打比赛', '网球、球拍', '标准网球场', 280, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 55, 2, '女子网球单打', 1, 2, '不限', 16, 1, 80.00, 'ITF标准规则，单打比赛', '网球、球拍', '标准网球场', 281, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 55, 2, '男子网球双打', 2, 1, '不限', 8, 2, 120.00, 'ITF标准规则，双打比赛', '网球、球拍', '标准网球场', 282, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 55, 2, '女子网球双打', 2, 2, '不限', 8, 2, 120.00, 'ITF标准规则，双打比赛', '网球、球拍', '标准网球场', 283, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 55, 2, '混合网球双打', 2, 3, '不限', 8, 2, 120.00, 'ITF标准规则，混合双打比赛', '网球、球拍', '标准网球场', 284, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于手球基础项目(假设base_item_id=56)创建具体比赛项目
(1, 56, 2, '男子手球', 2, 1, '不限', 14, 7, 420.00, 'IHF标准规则，每队可报7名替补', '手球、球门', '标准手球场', 290, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 56, 2, '女子手球', 2, 2, '不限', 14, 7, 420.00, 'IHF标准规则，每队可报7名替补', '手球、球门', '标准手球场', 291, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于棒球基础项目(假设base_item_id=58)创建具体比赛项目
(1, 58, 2, '男子棒球', 2, 1, '不限', 15, 9, 450.00, '棒球规则，每队可报6名替补', '棒球、球棒、手套', '标准棒球场', 300, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 58, 2, '女子棒球', 2, 2, '不限', 15, 9, 450.00, '棒球规则，每队可报6名替补', '棒球、球棒、手套', '标准棒球场', 301, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于垒球基础项目(假设base_item_id=59)创建具体比赛项目
(1, 59, 2, '男子垒球', 2, 1, '不限', 15, 9, 400.00, '垒球规则，每队可报6名替补', '垒球、球棒、手套', '标准垒球场', 305, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 59, 2, '女子垒球', 2, 2, '不限', 15, 9, 400.00, '垒球规则，每队可报6名替补', '垒球、球棒、手套', '标准垒球场', 306, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于高尔夫基础项目(假设base_item_id=61)创建具体比赛项目
(1, 61, 2, '男子高尔夫个人赛', 1, 1, '不限', 50, 1, 200.00, '高尔夫标准规则，18洞个人赛', '高尔夫球、球杆、球包', '18洞高尔夫球场', 320, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 61, 2, '女子高尔夫个人赛', 1, 2, '不限', 50, 1, 200.00, '高尔夫标准规则，18洞个人赛', '高尔夫球、球杆、球包', '18洞高尔夫球场', 321, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 61, 2, '高尔夫团体赛', 2, 3, '不限', 20, 4, 800.00, '高尔夫标准规则，4人团体赛', '高尔夫球、球杆、球包', '18洞高尔夫球场', 322, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- ============================================
-- 趣味比赛项目具体比赛项目示例
-- ============================================

-- 基于拔河基础项目(假设base_item_id=100)创建具体比赛项目
(1, 100, 11, '男子拔河比赛', 2, 1, '不限', 10, 8, 0.00, '传统拔河规则，8-10人团队', '拔河绳', '平坦场地', 300, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 100, 11, '女子拔河比赛', 2, 2, '不限', 10, 8, 0.00, '传统拔河规则，8-10人团队', '拔河绳', '平坦场地', 301, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 100, 11, '混合拔河比赛', 2, 3, '不限', 10, 8, 0.00, '传统拔河规则，男女各4-5人', '拔河绳', '平坦场地', 302, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于跳绳基础项目(假设base_item_id=104)创建具体比赛项目
(1, 104, 11, '个人跳绳计数赛', 1, 3, '不限', 20, 1, 10.00, '1分钟计数，记录跳绳次数', '跳绳', '平坦场地', 310, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 104, 11, '双人同步跳绳', 2, 3, '不限', 10, 2, 20.00, '双人同步跳绳，1分钟计数', '长跳绳', '平坦场地', 311, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 104, 11, '8字跳绳接力', 2, 3, '不限', 8, 8, 0.00, '8人8字跳绳，3分钟计数', '长跳绳', '平坦场地', 312, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于三人四足基础项目(假设base_item_id=101)创建具体比赛项目
(1, 101, 11, '三人四足50米', 2, 3, '不限', 15, 3, 0.00, '三人绑腿跑50米，按到达时间排名', '绑腿绳', '50米直线跑道', 315, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 101, 11, '三人四足接力赛', 2, 3, '不限', 12, 3, 0.00, '三人四足接力，4组×50米', '绑腿绳、接力棒', '200米跑道', 316, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于袋鼠跳基础项目(假设base_item_id=102)创建具体比赛项目
(1, 102, 11, '个人袋鼠跳50米', 1, 3, '不限', 20, 1, 5.00, '单人钻麻袋跳跃50米', '麻袋', '50米直线跑道', 320, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 102, 11, '袋鼠跳接力赛', 2, 3, '不限', 16, 4, 20.00, '4人袋鼠跳接力，每人50米', '麻袋', '200米跑道', 321, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于踢毽子基础项目(假设base_item_id=103)创建具体比赛项目
(1, 103, 11, '个人踢毽子计数赛', 1, 3, '不限', 20, 1, 8.00, '2分钟连续踢毽子计数', '毽子', '平坦场地', 325, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 103, 11, '团体踢毽子接力', 2, 3, '不限', 20, 5, 25.00, '5人踢毽子接力，每人踢30下', '毽子', '平坦场地', 326, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于摸石头过河基础项目(假设base_item_id=105)创建具体比赛项目
(1, 105, 11, '摸石头过河50米', 1, 3, '不限', 15, 1, 10.00, '用两块垫子轮流向前移动50米', '垫子2块', '50米直线距离', 330, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 105, 11, '摸石头过河接力', 2, 3, '不限', 12, 4, 40.00, '4人摸石头过河接力，每人50米', '垫子', '200米距离', 331, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于背靠背运球基础项目(假设base_item_id=106)创建具体比赛项目
(1, 106, 11, '背靠背运球50米', 2, 3, '不限', 10, 2, 15.00, '两人背靠背夹球走50米', '篮球或排球', '50米直线距离', 335, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 106, 11, '背靠背运球接力', 2, 3, '不限', 16, 2, 60.00, '8对选手背靠背运球接力', '篮球或排球', '400米距离', 336, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于乒乓板接力基础项目(假设base_item_id=107)创建具体比赛项目
(1, 107, 11, '乒乓板托球50米', 1, 3, '不限', 20, 1, 12.00, '乒乓球拍托球走50米，球不落地', '乒乓球拍、乒乓球', '50米直线距离', 340, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 107, 11, '乒乓板托球接力', 2, 3, '不限', 16, 4, 48.00, '4人乒乓球拍托球接力，每人50米', '乒乓球拍、乒乓球', '200米距离', 341, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于趣味障碍赛基础项目(假设base_item_id=108)创建具体比赛项目
(1, 108, 11, '个人趣味障碍赛', 1, 3, '不限', 20, 1, 20.00, '通过钻圈、跳跃、爬行等障碍', '障碍器材', '100米障碍场地', 345, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 108, 11, '团体趣味障碍接力', 2, 3, '不限', 16, 4, 80.00, '4人障碍接力赛，每人通过不同障碍', '障碍器材', '400米障碍场地', 346, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- ============================================
-- 综合运动项目具体比赛项目示例
-- ============================================

-- 基于体操基础项目创建具体比赛项目
(1, 200, 4, '男子自由体操', 1, 1, '不限', 12, 1, 100.00, '自由体操标准规则', '体操垫', '自由体操场地', 400, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 200, 4, '女子自由体操', 1, 2, '不限', 12, 1, 100.00, '自由体操标准规则', '体操垫', '自由体操场地', 401, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 201, 4, '男子双杠', 1, 1, '不限', 12, 1, 120.00, '双杠标准规则', '双杠', '体操场地', 405, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 202, 4, '女子高低杠', 1, 2, '不限', 12, 1, 120.00, '高低杠标准规则', '高低杠', '体操场地', 410, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于武术基础项目创建具体比赛项目
(1, 210, 5, '男子长拳', 1, 1, '不限', 16, 1, 80.00, '长拳套路比赛', '武术服', '武术场地', 450, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 210, 5, '女子长拳', 1, 2, '不限', 16, 1, 80.00, '长拳套路比赛', '武术服', '武术场地', 451, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 211, 5, '男子太极拳', 1, 1, '不限', 20, 1, 60.00, '太极拳套路比赛', '武术服', '武术场地', 455, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 211, 5, '女子太极拳', 1, 2, '不限', 20, 1, 60.00, '太极拳套路比赛', '武术服', '武术场地', 456, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),

-- 基于举重基础项目创建具体比赛项目
(1, 220, 6, '男子举重56kg级', 1, 1, '56kg', 8, 1, 150.00, '举重标准规则，56公斤级', '举重器材', '举重场地', 500, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 220, 6, '男子举重62kg级', 1, 1, '62kg', 8, 1, 150.00, '举重标准规则，62公斤级', '举重器材', '举重场地', 501, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 220, 6, '女子举重48kg级', 1, 2, '48kg', 8, 1, 150.00, '举重标准规则，48公斤级', '举重器材', '举重场地', 505, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()),
(1, 220, 6, '女子举重53kg级', 1, 2, '53kg', 8, 1, 150.00, '举重标准规则，53公斤级', '举重器材', '举重场地', 506, 1, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()); 